@inherits LayoutComponentBase
@inject IResizeObserver ResizeObserver

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <div @ref="_mainRef">
        @if (!_isMobile)
        {
            <MudDrawer @bind-Open="@_open"
                       Variant="@DrawerVariant.Responsive">
                <MudDrawerHeader>
                    <MudText id="topSiteTitle" Typo="Typo.h6">- Zijian XI</MudText>
                </MudDrawerHeader>
                <NavMenu></NavMenu>

                <MudNavMenu Style="margin-top: auto; ">
                    <MudSwitch  @bind-Value="_isDarkMode" ThumbIcon="@(_isDarkMode==true ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)" ThumbIconColor="@(_isDarkMode==true ? Color.Dark : Color.Dark)">
                    </MudSwitch>
                </MudNavMenu>
            </MudDrawer>

            <button id="logoStart" @onclick="OpenDrawer"><span class="iconmax iconmax-logo px24"></span></button>

        }
        else
        {
            @if (_openBottom)
            {
                <MudDrawer @bind-Open="_openBottom"
                           Width="100vw"
                           Height="auto"
                           Anchor="Anchor.Bottom"
                           Variant="DrawerVariant.Temporary"
                           Elevation="2">
                    <div class="nav-header-bottom row">
                        <span class="iconmax iconmax-logo px24"></span>
                    </div>

                    <NavMenu></NavMenu>
                    <MudNavMenu Style=" margin-left: auto;">
                        <MudSwitch @bind-Value="_isDarkMode" ThumbIcon="@(_isDarkMode==true ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)" ThumbIconColor="@(_isDarkMode==true ? Color.Dark : Color.Dark)">
                        </MudSwitch>
                    </MudNavMenu>


                </MudDrawer>
            }
            @if (!_openBottom)
            {
                <button id="logoBottom" @onclick="OpenDrawerBottom"><span class="iconmax iconmax-logo px45"></span></button>
            }
        }
        <MudMainContent>
            @Body
        </MudMainContent>
    </div>
</MudLayout>


@code {
    private MudTheme _theme = new();
    private bool _isDarkMode = true;
    private bool _openBottom = false;
    private bool _open = true; 
    private bool _isMobile;

    private ElementReference _mainRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var rect = await ResizeObserver.Observe(_mainRef);
            _isMobile = rect.Width < 768;
            StateHasChanged();
        }
    }

    private void OpenDrawerBottom()
    {
        _openBottom = !_openBottom;

    }
    private void OpenDrawer()
    {
        _open = !_open;

    }
}



