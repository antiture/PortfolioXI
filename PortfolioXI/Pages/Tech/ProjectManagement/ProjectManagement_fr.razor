 
@layout Layout.LayoutTech
 
  
<PageTitle>ProjectManagement</PageTitle>
<div class="text-flow">
    <SectionText Title3="Flux de formation général en apprentissage automatique" Title3Sub="Self-Attention · Neuronal · Arbre · Linéaire · Clustering – Version : 4.5"
                 Title4="Introduction">

        <Br12 /><strong>Ce schéma illustre un flux de travail générique</strong> pour l’entraînement de modèles d’apprentissage automatique, applicable à une grande variété d’architectures, telles que les réseaux de neurones, les arbres de décision, les régressions linéaires, les algorithmes de clustering, ou encore les mécanismes d’auto-attention.

        <Br12 />Il couvre l’<strong>ensemble du cycle de vie</strong> du machine learning :
        <Indent>
            <Br8 />- collecte des données
            <Br0 />- prétraitement
            <Br0 />- ingénierie des caractéristiques
            <Br0 />- sélection et entraînement des modèles
            <Br0 />- ajustement des hyperparamètres
            <Br0 />- documentation et livraison des résultats
        </Indent>

        <Br12 />Ce workflow met l’accent sur :
        <Indent>
            <Br8 />- la <strong>réutilisabilité modulaire</strong>
            <Br0 />- la <strong>visualisation claire des étapes</strong>
            <Br0 />- la <strong>préparation au déploiement en production</strong>
        </Indent>

        <Br12 />Il est utilisé pour des <strong>entraînements multi-modèles automatisés</strong> dans des environnements complexes (v.4.5).
    </SectionText>

    <SectionText Title4="Décomposition des modules fonctionnels" Title5="1. Collection – Préparation des données">
        <Br12 /><strong>Étapes clés du prétraitement :</strong>
        <Indent>
            <Br8 />1 – <strong>PROCESS</strong> : nettoyage des données, détection des doublons, mise en forme
            <Br0 />2 – <strong>PreCheck</strong> : traitement initial des valeurs manquantes et des anomalies
            <Br0 />3 – <strong>Unions</strong> : fusion de jeux de données, standardisation des étiquettes
            <Br0 />4 – <strong>GlobalAdaptation</strong> : normalisation ou mise à l’échelle
            <Br0 />5 – <strong>EnvUnderstanding</strong> & 6 – <strong>Verification</strong> : compréhension de l’environnement et validation de la qualité des données
        </Indent>
    </SectionText>

    <SectionText Title5="2. Training – Ingénierie des caractéristiques & modélisation">
        <Br12 /><strong>Ce module permet l’entraînement parallèle de cinq types de modèles :</strong>
        <Indent>
            <Br8 />- <strong>TreeBased</strong>
            <Br0 />- <strong>LinearBased</strong>
            <Br0 />- <strong>ClusterBased</strong>
            <Br0 />- <strong>NeuralBased</strong>
            <Br0 />- <strong>SelfAttentionBased</strong>
        </Indent>

        <Br12 />Chaque modèle suit les étapes suivantes :
        <Indent>
            <Br8 />1 – <strong>FeaturePreprocessing</strong> : préparation des variables
            <Br0 />2 – <strong>FeatureAnalysis</strong> : analyse des caractéristiques
            <Br0 />3 – <strong>ModelAssignment</strong> : configuration du modèle
        </Indent>
    </SectionText>

    <SectionText Title5="3. Adjustment – Validation & optimisation">
        <Br12 /><strong>Phase d’évaluation et d’ajustement :</strong>
        <Indent>
            <Br8 />- Intègre : <strong>K-Fold</strong>, <strong>GridSearch</strong>, <strong>ValidationSchema</strong>
            <Br0 />- Vérification automatisée des <strong>métriques</strong>, <strong>performances</strong> et <strong>mécanismes de rollback</strong>
            <Br0 />- Les <strong>modèles validés</strong> passent ensuite à la phase de <strong>documentation</strong> et de <strong>génération de rapports</strong>
        </Indent>
    </SectionText>

    <SectionText Title5="4. Implémentation & Accessoires – Documentation & Livraison">
        <Br12 /><strong>Étapes de finalisation :</strong>
        <Indent>
            <Br8 />- <strong>Rapports modèles</strong> : diagrammes de structure, courbes de performance
            <Br0 />- <strong>Export</strong> : sauvegarde des modèles (ex. : <code>.pkl</code>, <code>.onnx</code>)
            <Br0 />- <strong>Documentation</strong> : détails sur la structure, les hyperparamètres et le processus d’entraînement
            <Br0 />- <strong>PostStructLevelDoc</strong> : documentation technique approfondie
            <Br0 />- <strong>Refactoring</strong>, <strong>UnitTest</strong>, <strong>Finalization</strong> : garantissent la qualité et la maintenabilité du pipeline
        </Indent>
    </SectionText>

    <SectionText Title4="Application & Extensibilité">
        <Br12 /><strong>Atouts du workflow :</strong>
        <Indent>
            <Br8 />- <strong>Universalité</strong> : compatible avec la majorité des cas d’usage ML ; les modèles sont directement réutilisables
            <Br0 />- <strong>Visualisation</strong> : représentation graphique claire, utile en équipe, en formation ou en revue de projet
            <Br0 />- <strong>Modularité</strong> : chaque étape est un module indépendant, interchangeable ou extensible
            <Br0 />- <strong>Approche ingénierie</strong> : chaque tâche est accompagnée d’un type et d’une estimation claire (ex. : <code>dev 4.5 – 10</code> pour 4,5 à 10 jours-homme) ; idéal pour structurer un projet de R&D
        </Indent>
    </SectionText>

    <SectionText>
        Ce projet a été conçu et développé de manière autonome, dans un but exclusif de démonstration de compétences.
        Toute reproduction, diffusion ou réutilisation est soumise à l’accord préalable de l’auteur.
    </SectionText>

    <VisionerImage Image=Images[1]>
    </VisionerImage>
    <VisionerImage Image=Images[2]>
    </VisionerImage>

    <SectionText Title4="Implémentation réelle du workflow ML">
        <Br12 />Ce schéma fait correspondre les <strong>modules fonctionnels</strong> du projet IA (à gauche) aux <strong>tâches réelles</strong> extraites d’un tableau de suivi (à droite).

        <Br12 />Les <strong>flèches bleues</strong> illustrent concrètement comment chaque bloc conceptuel :
        <Indent>
            <Br8 />- <strong>Training</strong>
            <Br0 />- <strong>Preprocessing</strong>
            <Br0 />- <strong>Evaluation</strong>
        </Indent>
        est mis en œuvre dans la <strong>gestion quotidienne du projet</strong>, en indiquant :
        <Indent>
            <Br8 />- l’équipe concernée
            <Br0 />- l’état d’avancement
            <Br0 />- le type de travail et les ressources allouées
        </Indent>

        <Br12 />Cette <strong>vue croisée</strong> démontre la capacité à <strong>traduire une architecture technique en actions concrètes</strong>, et facilite le <strong>pilotage opérationnel</strong>.
    </SectionText>

    <VisionerImage Image=Images[3]>
    </VisionerImage>
</div>

@code {
    private List<ImageItem> Images = new()
    {
        new ImageItem { Src = "images/projectmanagement/00.png", Id = "00" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/projectmanagement/01.png", Id = "01" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/projectmanagement/02.png", Id = "02" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/projectmanagement/03.png", Id = "03" , Dir = ImageDirection.Ori }
    };

}
