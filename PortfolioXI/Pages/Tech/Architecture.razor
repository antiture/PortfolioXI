@page "/Architecture"

<PageTitle>Architecture</PageTitle>


<div class="text-flow">
    <SectionText Title3="Tracence : Assistant IA pour Flux de Travail Distribué" Title3Sub="Application multiplateforme basée sur .NET MAUI, C#, Blazor et l’automatisation par IA"
                 Title4="Introduction">
        <Br12 />Ce projet est une <strong>solution intelligente</strong> d’assistance aux <strong>flux de travail</strong>, conçue pour <strong>automatiser</strong> des processus métiers spécifiques et <strong>réduire les interventions manuelles</strong>.

        <Br12 />L’application se compose de deux interfaces principales :
        <Indent>
            <Br8 />- une <strong>application mobile</strong> (basée sur .NET MAUI),
            <Br0 />- une <strong>version web</strong> (développée avec Blazor WebAssembly),
        </Indent>
        <Br0 />reposant sur une <strong>architecture de services unifiée</strong>.

        <Br12 />Le projet est actuellement en <strong>cours de développement</strong> ; il s’inscrit dans une <strong>démarche exploratoire</strong> mêlant :
        <Indent>
            <Br8 />- <strong>IA appliquée</strong>,
            <Br0 />- <strong>conception modulaire</strong> en .NET MAUI,
            <Br0 />- <strong>optimisation</strong> des flux de travail distribués.
        </Indent>
    </SectionText>

    <SectionText Title4="Présentation des fonctionnalités" Title5="Exécution automatisée des flux de travail">
        <Br12 />Intégration d’un <strong>moteur IA</strong> pour automatiser la <strong>réception de données</strong>, le <strong>prétraitement</strong>, la <strong>génération de documents</strong> et l’appel de services externes.
    </SectionText>

    <SectionText Title5="Architecture modulaire hiérarchisée">
        <Br12 />Séparation logique en couches (<strong>plateforme</strong>, <strong>services</strong>, <strong>base de données</strong>), respectant l’<strong>inversion des dépendances</strong> et la <strong>programmation orientée interface</strong>.
    </SectionText>

    <SectionText Title5="Support multiplateforme">
        <Br12 />Utilisation de <strong>.NET MAUI</strong> pour les clients iOS / Android, et <strong>Blazor</strong> pour le web, avec un <strong>fort taux de réutilisation de code</strong>.
    </SectionText>

    <SectionText Title5="Abstraction des services et répartition adaptative">
        <Br12 />Interfaces <strong>normalisées</strong> pour gérer des services <strong>localisés</strong>, <strong>centraux</strong> ou <strong>serveurs</strong> selon les contextes de déploiement.
    </SectionText>

    <SectionText Title5="Gestion standardisée des appels HTTP et du contexte utilisateur">
        <Br12 />Usage de <code>HttpClientFactory</code> et <code>IHttpContextAccessor</code> pour un <strong>traitement contextuel</strong> cohérent et sécurisé.
    </SectionText>

    <SectionText Title4="Stack technique">
        <Br12 /><strong>Stack technologique principal :</strong>
        <Indent>
            <Br8 /><strong>Frontend</strong> : .NET MAUI (App mobile), Blazor (Web), C#
            <Br0 /><strong>Backend</strong> : Services ASP.NET Core (couches Platform / API / DML)
            <Br0 /><strong>IA intégrée</strong> : API OpenAI, <strong>recherche vectorielle</strong>, <strong>génération automatique</strong> (modules extensibles)
        </Indent>
    </SectionText>
    <VisionerImage Image=Images[1] SizeFlow="400*" SizeVis="600*">
    </VisionerImage>
    <SectionText Title4="System Overview – AI Workflow Assistant Architecture">
        <Br12 />This diagram presents the <strong>overall structure</strong> of the application, covering:
        <Indent>
            <Br8 />- <strong>frontend platforms</strong> (Blazor / MAUI),
            <Br0 />- <strong>core service layers</strong>,
            <Br0 />- <strong>backend data handling</strong> (via stored procedures and vector databases),
            <Br0 />- and <strong>external AI integration</strong> through OpenAPI and LLM.
        </Indent>
        <Br12 />It reflects a <strong>well-orchestrated distributed service design</strong>.
    </SectionText>


    <VisionerImage Image=Images[2]>
    </VisionerImage>
    <SectionText Title4="Domain Model and Semantic Service Architecture">
        <Br12 />This diagram details the <strong>internal domain logic</strong>, including strategies for:
        <Indent>
            <Br8 />- <strong>permissions</strong>,
            <Br0 />- <strong>user entities</strong>,
            <Br0 />- <strong>themes</strong>,
            <Br0 />- and abstract <strong>service patterns</strong>.
        </Indent>

        <Br12 />It employs <strong>factory</strong> and <strong>adapter patterns</strong> to manage domain complexity,
        <Br8 />demonstrating a <strong>solid approach</strong> to semantic and modular design.
    </SectionText>

    <VisionerImage Image=Images[3]>
    </VisionerImage>
    <SectionText Title4="Database Connectivity and HTTP Service Adapter">
        <Br12 />This module encapsulates <strong>local</strong>, <strong>central</strong>, and <strong>server-side</strong> database services
        <Br8 />through a <strong>shared interface</strong>.

        <Br12 />It also manages <strong>HTTP service injection</strong> via <strong>HttpClientFactory</strong> and contextual access,
        <Br8 />ensuring <strong>scalable</strong> and <strong>decoupled data interaction</strong>.
    </SectionText>

    <VisionerImage Image=Images[4]>
    </VisionerImage>
    <SectionText Title4="User Directory Context and Access Management">
        <Br12 />This diagram illustrates the logic behind:
        <Indent>
            <Br8 />- <strong>user update events</strong>,
            <Br0 />- <strong>directory synchronization</strong>,
            <Br0 />- <strong>access control base classes</strong>,
            <Br0 />- and <strong>authentication delegating handlers</strong>.
        </Indent>

        <Br12 />It highlights the system’s attention to:
        <Indent>
            <Br8 />- <strong>state consistency</strong>,
            <Br0 />- and <strong>secure user identity management</strong>.
        </Indent>
    </SectionText>

    <VisionerImage Image=Images[5]>
    </VisionerImage>
</div>

@code {
    private List<ImageItem> Images = new()
    {
        new ImageItem { Src = "images/architecture/00.png", Id = "00" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/architecture/01.png", Id = "01" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/architecture/02.png", Id = "02" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/architecture/03.png", Id = "03" , Dir = ImageDirection.Ori },
        new ImageItem { Src = "images/architecture/04.png", Id = "04" , Dir = ImageDirection.Verti },
        new ImageItem { Src = "images/architecture/05.png", Id = "05" , Dir = ImageDirection.Verti } 
    };

}
